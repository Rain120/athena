(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{550:function(s,t,a){"use strict";a.r(t);var n=a(23),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"节点-编辑器-元素和文本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点-编辑器-元素和文本"}},[s._v("#")]),s._v(" 节点: 编辑器，元素和文本")]),s._v(" "),a("p",[s._v("最重要的类型是 "),a("code",[s._v("Node")]),s._v(" 对象：")]),s._v(" "),a("ul",[a("li",[s._v("包含整个文档内容的 "),a("code",[s._v("Editor")]),s._v(" 根节点。")]),s._v(" "),a("li",[s._v("在自定义域中拥有语义的 "),a("code",[s._v("Element")]),s._v(" 容器节点。")]),s._v(" "),a("li",[s._v("包含文档文本的 "),a("code",[s._v("Text")]),s._v(" 叶子节点。")])]),s._v(" "),a("p",[s._v("这三个接口组合在一起形成一棵树 -- 就像 "),a("code",[s._v("DOM")]),s._v(" 一样。举例来说，这是一个简单的纯文本值:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" editor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  children"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'paragraph'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      children"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          text"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A line of text!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...编辑器还有被省略的其他属性。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("尽可能地对应 "),a("code",[s._v("DOM")]),s._v(" 是 "),a("code",[s._v("Slate")]),s._v(" 的原则之一。人们总是使用 "),a("code",[s._v("DOM")]),s._v(" 来描述类似富文本结构的文档。对应 "),a("code",[s._v("DOM")]),s._v(" 有助于新用户熟悉类库，并且可以让我们重用经过重重考验的结构模式，而不是自己造一个新的轮子。")]),s._v(" "),a("blockquote",[a("p",[s._v("🤖 下面来自于 "),a("strong",[s._v("MDN Web 文档")]),s._v(" 的内容可以帮助你理解更多相应的 DOM概念:")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Document",target:"_blank",rel:"noopener noreferrer"}},[s._v("Document"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Block-level_elements",target:"_blank",rel:"noopener noreferrer"}},[s._v("块级元素"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Inline_elements",target:"_blank",rel:"noopener noreferrer"}},[s._v("行内元素"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Text",target:"_blank",rel:"noopener noreferrer"}},[s._v("文本元素"),a("OutboundLink")],1)])])]),s._v(" "),a("p",[a("code",[s._v("Slate")]),s._v(" 文档是一个嵌套递归的结构。在文档中，元素可以有子节点 — 所有元素都可以无限制地拥有子节点。嵌套递归的结构确保你可以建模简单的行为，比如用户的 "),a("code",[s._v("@")]),s._v(" 提及 和 "),a("code",[s._v("#")]),s._v(" 标签或是带标题的表格和图片。")]),s._v(" "),a("h2",{attrs:{id:"编辑器-editor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编辑器-editor"}},[s._v("#")]),s._v(" "),a("code",[s._v("编辑器(Editor)")])]),s._v(" "),a("p",[a("code",[s._v("Slate")]),s._v(" 的顶级节点就是 "),a("code",[s._v("Editor")]),s._v(" 。它封装了文档的所有富文本内容。它的接口是这样的:")]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Editor")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  children"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("我们稍后会介绍他的功能，但是对于节点来说最重要的部分是它的 "),a("code",[s._v("children")]),s._v(" 属性，其中包含一个 "),a("code",[s._v("Node")]),s._v(" 对象树。")]),s._v(" "),a("h2",{attrs:{id:"元素-element"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素-element"}},[s._v("#")]),s._v(" "),a("code",[s._v("元素(Element)")])]),s._v(" "),a("p",[s._v("元素组成了富文本文档的中间层。它们是对你的域定制的节点。它们的接口是这样的:")]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Element")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  children"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("unknown")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("你可以为任何类型的内容定义自定义元素。比如你可能想要一个段落和引用在你的数据模型中，它们通过 "),a("code",[s._v("type")]),s._v(" 属性区分:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" paragraph "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'paragraph'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  children"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" quote "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'quote'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  children"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("需要提醒的是，你可以使用任何的自定义属性。在这个例子中， "),a("code",[s._v("Slate")]),s._v(" 并不关心 "),a("code",[s._v("type")]),s._v(" 属性具体是什么。如果你自定义了 "),a("code",[s._v("link")]),s._v(" 节点，你可能有一个 "),a("code",[s._v("url")]),s._v(" 属性:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" link "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'link'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://example.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  children"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("或者你可能给所有的节点定义一个 "),a("code",[s._v("ID")]),s._v(" 属性:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" paragraph "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'paragraph'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  children"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("重要的是元素总是有一个 "),a("code",[s._v("children")]),s._v(" 属性。")]),s._v(" "),a("h2",{attrs:{id:"块-blocks-vs-行内-inlines"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块-blocks-vs-行内-inlines"}},[s._v("#")]),s._v(" 块(Blocks) vs. 行内(Inlines)")]),s._v(" "),a("p",[s._v("根据你的用例，你可能想要为 "),a("code",[s._v("Element")]),s._v(" 定义一个另一个行为，这个行为决定了它的编辑流。")]),s._v(" "),a("p",[s._v("所有元素默认是块 "),a("code",[s._v("(block)")]),s._v(" 元素。它们被垂直空间隔开，并且永不重叠。")]),s._v(" "),a("p",[s._v("但是在某些情况下，比如链接，你可能想要把它作为行内 "),a("code",[s._v("(Inlines)")]),s._v(" 元素流。 这样的话，它就会和文本节点位于同一级别和同样的流。")]),s._v(" "),a("blockquote",[a("p",[s._v("🤖 这个概念借用了 "),a("code",[s._v("DOM")]),s._v(" 的行为，参考 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Block-level_elements",target:"_blank",rel:"noopener noreferrer"}},[s._v("块级元素"),a("OutboundLink")],1),s._v(" 和 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Inline_elements",target:"_blank",rel:"noopener noreferrer"}},[s._v("行内元素"),a("OutboundLink")],1),s._v(" 。")])]),s._v(" "),a("p",[s._v("可以通过重写 "),a("code",[s._v("editor.isInline")]),s._v(" 函数来定义哪些节点属于行内节点。(默认情况下，它总是返回 "),a("code",[s._v("false")]),s._v("。) "),a("strong",[s._v("请注意")]),s._v("，内联节点不能是父块的第一个或最后一个子节点，也不能在子节点数组中的另一个内联节点旁边。"),a("code",[s._v("Slate")]),s._v(" 默认情况下会使用 "),a("RouterLink",{attrs:{to:"/zh/slate/concepts/10-normalizing.html#built-in-constraints"}},[s._v("normalizeNode")]),s._v(" 自动将 "),a("code",[s._v("{ text: '' }")]),s._v(" 子元素分隔开。")],1),s._v(" "),a("p",[s._v("元素可以将块元素作为子元素包含。或者混合行内元素和文本元素，把它们作为子节点。但是元素"),a("strong",[s._v("不能")]),s._v("同时包含行内元素和块元素。")]),s._v(" "),a("h2",{attrs:{id:"空元素-voids"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空元素-voids"}},[s._v("#")]),s._v(" 空元素(Voids)")]),s._v(" "),a("p",[s._v("类似于块元素和行内元素，另一个你可以定义的特殊元素为空元素：它们的 "),a("code",[s._v("void")]),s._v(" 性：")]),s._v(" "),a("p",[s._v("元素默认是非空元素，意味着它的子元素是完全可以像文本一样编辑。但是有时候，比如图像， 你可能想要确保 "),a("code",[s._v("Slate")]),s._v(" 不会将元素的内容作为可编辑的文本，而是看做一个黑箱。")]),s._v(" "),a("blockquote",[a("p",[s._v("🤖 这个概念是从 "),a("code",[s._v("HTML")]),s._v(" 借用的，请查看 "),a("a",{attrs:{href:"https://www.w3.org/TR/2011/WD-html-markup-20110405/syntax.html#void-element",target:"_blank",rel:"noopener noreferrer"}},[s._v("空元素"),a("OutboundLink")],1),s._v(" 。")])]),s._v(" "),a("p",[s._v("可以通过定义 "),a("code",[s._v("editor.isVoid")]),s._v(" 函数来定义哪些元素被视为 "),a("code",[s._v("void")]),s._v("。(默认情况下，它总是返回 "),a("code",[s._v("false")]),s._v("。)")]),s._v(" "),a("h2",{attrs:{id:"文本-text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本-text"}},[s._v("#")]),s._v(" "),a("code",[s._v("文本(Text)")])]),s._v(" "),a("p",[s._v("文本节点是树中的最低级节点，包含文档的文本内容以及任何格式。它的接口是:")]),s._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Text")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  text"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("unknown")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("比如这个例子，加粗文本:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" text "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  text"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A string of bold text'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  bold"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("文本节点可以包含任意的自定义属性，这就是你如何实现像是"),a("strong",[s._v("粗体")]),s._v("，"),a("em",[s._v("斜体")]),s._v("，"),a("code",[s._v("代码")]),s._v("等自定义格式的办法。")])])}),[],!1,null,null,null);t.default=e.exports}}]);